



---职业规划
方向一 技术岗/管理岗
技术工程师--高级工程师--技术专家

职级          工作年限                    百度                   阿里                      腾讯
工程师         1-3                       T
高级技术专家    2-5                       T4                     P5                        T2-2
资深工程师      3-6                       T5                     P6                         T2-3
技术专家        4-8                       T6                     P7                         T3-1
高级技术专家     5-10                     T7                     P8                         T3-3


公司与团队
核心业务

大公司核心业务
小公司核心业务

大公司边缘业务
小公司边缘业务


个人匹配度
兴趣经验
核心业务--

--面试流程
0面试前--笔试、电话面试、上机编程
1纯技术--未来的同事--基础与实战
2纯技术--技术深度&算法--直属领导
3半技术--架构与发展潜力--部门leader
4非技术--HR:个人发展规划、价值观、、薪资

能力
沟通--顺畅的沟通
心态--

技术上的梳理
存储中间件
面试所属团队


沟通
------------
沟通，简短，特长
面试表情，观察，

硬实力能力
------------
基础知识、项目经验、架构能力、应用能力



软实力
------------
逻辑思维、沟通协作、管理推荐、学习思考、培养潜力




往后发展
------------

疑难问题的处理
原理实现
框架能力的实现
大规模高并发场景

高可用，可扩展，
业务抽象架构能力
分布式服务设计原则理解

团队管理
团队把控
利用一切资源推动
跨团队沟通
完成目标
协作沟通
工作内容的区别

【积累， 深度广度】

从过往的经验来来看，我对项目的整体规划管理推进比较感兴趣，
在任务推进协调沟通方面，也有比较突出的表现
所以的职业规划是成为一名优秀的技术经理，并以管理方向为发展目标



https://www.cnblogs.com/morethink/p/8419151.html

Java8新特性，stream流的不足，nginx 反向代理，Spring @Autowired的aop怎么实现, Kubernetes和docker，restful几种请求方式

rabbit kafka 经验
微服务原理
多线程
高并发
异步编程

内存溢出

---------------------


技能、经历
自我总结、标签

行业视角
用户视角
管理视角
做分类







分布式文件传输平台
输入输出

输入文件&配置

输出文件&日志


node
功能：文件的新增、删除、备份、查询、权限控制、操作记录处理



数据驱动
组件化开发




spring如何解决循环依赖的， 面试中如何回答，给我一个简练回答的答案和详细回答的答案
ChatGPT
简练回答：
Spring通过三级缓存机制来解决循环依赖问题，即通过提前暴露未完成的Bean实例来解决依赖关系。

详细回答：
Spring解决循环依赖的机制是通过三级缓存来实现的。

第一级缓存：Spring容器在创建Bean的过程中，会将正在创建的Bean对象放入第一级缓存中。这样，当后续的Bean创建过程中遇到对该Bean的依赖时，直接从缓存中获取，避免重复创建。

第二级缓存：如果第一级缓存无法解决循环依赖，Spring会尝试使用第二级缓存。在第一级缓存中，
如果遇到循环依赖的情况，Spring会将当前正在创建的Bean对象进行中间暴露（early reference），即创建一个早期引用对象，用于解决循环依赖。
这样，在后续的Bean创建过程中，当遇到对该Bean的依赖时，会先使用早期引用对象，而不是真正的Bean实例。

第三级缓存：如果第二级缓存也无法解决循环依赖，Spring会尝试使用第三级缓存。
在第二级缓存中，如果还有无法解决的循环依赖，Spring会将正在创建的Bean对象进行完全暴露（exposed object），
即创建一个代理对象，该代理对象可以提供对其他尚未创建完成的Bean的引用。这样，解决了循环依赖问题。


当所有的Bean都创建完成后，Spring会从第三级缓存中移除所有的代理对象，并将真正的Bean实例放入第一级缓存，供后续的Bean依赖注入使用。

在面试中回答该问题时，可以简洁地概括三级缓存的解决方案，并简单描述每个缓存级别的作用。如果对方需要更详细的解释，可以进一步介绍每个缓存级别的具体实现和原理。





